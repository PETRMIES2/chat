import org.apache.tools.ant.filters.*
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.flywaydb:flyway-gradle-plugin:3.2.1"
    }
}

repositories {
    maven {  url 'https://maven-central.storage.googleapis.com'   }
    jcenter()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: "org.flywaydb.flyway"
apply plugin: 'eclipse'
apply from: 'user.gradle'


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    
    compile 'org.reflections:reflections:0.9.10',
            "com.google.guava:guava:$guavaVersion",
            "javax.servlet:javax.servlet-api:$servletApiVersion",
            "mysql:mysql-connector-java:$mysqlConnectorVersion",

            "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",


            'javax.inject:javax.inject:1',

            "org.hibernate:hibernate-core:$hibernateVersion",
            "org.hibernate:hibernate-c3p0:$hibernateVersion",
            'org.hibernate:hibernate-ehcache:5.1.0.Final',
            
            "org.slf4j:slf4j-api:$slf4jVersion",

            "org.springframework:spring-websocket:$springVersion",
            "org.springframework:spring-messaging:$springVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-web:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework:spring-aop:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "org.springframework.security:spring-security-messaging:$springSecurityVersion",
            "org.springframework.security:spring-security-web:$springSecurityVersion",
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.flywaydb:flyway-core:4.0.1",
            "com.zaxxer:HikariCP:$hikariCPVersion",
            'com.sun.mail:javax.mail:1.5.4',
            'com.squareup.okhttp3:okhttp:3.8.0',
            'com.google.code.gson:gson:2.7', 
            'com.google.cloud.sql:mysql-socket-factory:1.0.1',
            'net.sf.ehcache:ehcache:2.10.3',
            'io.reactivex.rxjava2:rxjava:2.0.8'

    compile project(":core")
    compile project(":common")

    testCompile "junit:junit:$jUnit",
            "org.assertj:assertj-core:$assertJ",
            "org.mockito:mockito-core:$mockitoCore",
            "org.mockito:mockito-all:$mockitoCore",
            "org.mock-server:mockserver-netty:3.10.4",
            "org.springframework:spring-test:$springVersion",
            "org.hamcrest:hamcrest-all:1.3",
            "com.jayway.jsonpath:json-path:1.2.0",
            "com.h2database:h2:1.4.192"
}


compileTestJava {
    //enable compilation in a separate daemon process
    options.fork = true
    options.encoding = 'UTF-8'
    options.debug = true

}
compileJava{
    //enable compilation in a separate daemon process
    options.fork = true
    options.encoding = 'UTF-8'
    options.debug = true

    println "*** BACKEND: COMPILE INFORMATION ***"
    println "Source compatibility $project.sourceCompatibility - $sourceCompatibility"
    println "Target compatibility $project.targetCompatibility - $targetCompatibility"
    println "Encoding $options.encoding"
    println "Debug $options.debug"
    println "Java home $System.env.JAVA_HOME"
}

loadConfiguration()

def loadConfiguration() {
    def environment = hasProperty('env') ? env : 'dev'
    project.ext.environement = environment
    println "Environment is set to $environment"

    def environmentFile = file('environments.groovy')
    def environmentConfig = new ConfigSlurper(environment ).parse(environmentFile.toURL())
    project.ext.config =  environmentConfig

    println "databaseuser:  $project.ext.config.datasource.username"
    println "databasepassword: $project.ext.config.datasource.password"
}

task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}

war.dependsOn explodedWar


processResources {
    expand(project.ext.config)
}


// ./gradlew :backend:flywayclean :backend:flywaymigrate
flyway {
    url = 'jdbc:mysql://localhost:3306/sope'
    user = "$project.ext.config.datasource.username"
    password = "$project.ext.config.datasource.password"
    locations = [
        'filesystem:subprojects/backend/db/migration'
    ]
    baselineOnMigrate = true
}

task wrapper(type: Wrapper) {  gradleVersion = '3.0'  }
